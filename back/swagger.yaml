swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions:
    get:
      tags:
        - Transactions Module
      summary: Returns all transactions, grouped by month and account
      description: Returns all transactions, grouped by month and account.
      operationId: getInventory
      parameters:
        - name: verification_token
          in: query
          description: Verification token
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: User ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  allTransactionsOfTheRightId:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        listOfTransactions:
                          type: string
                        category:
                          type: string
                        notes:
                          type: string
                        status:
                          type: string
                        complete:
                          type: boolean
                        transactionType:
                          type: string
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
      security:
        - api_key: []


  /user/transaction/{id}:
    get:
      tags:
        - Transactions Module
      summary: Visualization of only one transaction
      description: Visualization of only one transaction.
      operationId: getOneTransaction
      parameters:
        - name: verification_token
          in: query
          description: Verification token
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: User ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  allTransactionsOfTheRightId:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        listOfTransactions:
                          type: string
                        category:
                          type: string
                        notes:
                          type: string
                        status:
                          type: string
                        complete:
                          type: boolean
                        transactionType:
                          type: string
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
      security:
        - api_key: []
    post:
      tags:
        - Transactions Module
      summary: Add a new transaction
      description: Add a new transaction.
      operationId: addTransaction
      parameters:
        - name: verification_token
          in: query
          description: Verification token
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: User ID
          required: true
          schema:
            type: integer
            format: int32
        - name: id   # Ajoutez le paramètre "id" ici
          in: path    # Définissez-le comme un paramètre de chemin
          description: ID of the transaction
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '201':
          description: Transaction added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  allTransactionsOfTheRightId:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        listOfTransactions:
                          type: string
                        category:
                          type: string
                        notes:
                          type: string
                        status:
                          type: string
                        complete:
                          type: boolean
                        transactionType:
                          type: string
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
      security:
        - api_key: []
    delete:
      tags:
        - Transactions Module
      summary: Delete a transaction
      description: Delete a transaction.
      operationId: deleteTransaction
      parameters:
        - name: verification_token
          in: query
          description: Verification token
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: User ID
          required: true
          schema:
            type: integer
            format: int32
        - name: id   # Ajoutez le paramètre "id" ici
          in: path    # Définissez-le comme un paramètre de chemin
          description: ID of the transaction
          required: true
          schema:
            type: integer
            format: int32    
        # Add other parameters for the new transaction here
      responses:
        '201':
          description: Transaction deleted succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  allTransactionsOfTheRightId:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        listOfTransactions:
                          type: string
                        category:
                          type: string
                        notes:
                          type: string
                        status:
                          type: string
                        complete:
                          type: boolean
                        transactionType:
                          type: string
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
      security:
        - api_key: []
    put:
      tags:
        - Transactions Module
      summary: Modify information about a specific transaction
      description: Modify information about a specific transaction.
      operationId: modifyTransaction
      parameters:
        - name: verification_token
          in: query
          description: Verification token
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: User ID
          required: true
          schema:
            type: integer
            format: int32
        - name: newInfosToPut
          in: query
          description: New information to update for the transaction
          required: true
          schema:
            type: integer
        - name: id   # Ajoutez le paramètre "id" ici
          in: path    # Définissez-le comme un paramètre de chemin
          description: ID of the transaction to be modified
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Transaction modified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  allTransactionsOfTheRightId:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        listOfTransactions:
                          type: string
                        category:
                          type: string
                        notes:
                          type: string
                        status:
                          type: string
                        complete:
                          type: boolean
                        transactionType:
                          type: string
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
      security:
        - api_key: []
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
